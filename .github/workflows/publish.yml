on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - '*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Upload Release Asset

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
        dockerfile: [3-38, 3-38-slim, 3-39]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get extension name
        id: get-extension-name
        run: |
          echo ::set-output name=extension-name::$(basename *.gz)
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        if: ${{matrix.dockerfile}} == "3-38"
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ${{ steps.get-extension-name.outputs.extension-name }} 
          asset_name: ${{ steps.get-extension-name.outputs.extension-name }}
          asset_content_type: application/gzip
